#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üß™ TESTE DAS CORRE√á√ïES DO MOVIEPY
Script para testar se as corre√ß√µes funcionaram corretamente
"""

import sys
import os
import traceback

def test_moviepy_imports():
    """Testar importa√ß√µes do MoviePy ap√≥s as corre√ß√µes"""
    print("=" * 60)
    print("TESTANDO IMPORTA√á√ïES DO MOVIEPY AP√ìS CORRE√á√ïES")
    print("=" * 60)
    
    # Testar importa√ß√£o direta dos componentes
    try:
        from moviepy import VideoFileClip, ImageClip, AudioFileClip, CompositeVideoClip
        print("‚úÖ Importa√ß√£o direta de componentes do MoviePy bem-sucedida")
    except ImportError as e:
        print(f"‚ùå Falha na importa√ß√£o direta: {e}")
        return False
    
    # Testar importa√ß√£o com tratamento de erro
    try:
        try:
            from moviepy import TextClip, concatenate_videoclips, ColorClip
            MOVIEPY_AVAILABLE = True
            print("‚úÖ Importa√ß√£o com tratamento de erro bem-sucedida")
        except ImportError as e:
            print(f"‚ö†Ô∏è MoviePy n√£o dispon√≠vel: {e}")
            MOVIEPY_AVAILABLE = False
            TextClip = concatenate_videoclips = ColorClip = None
    except Exception as e:
        print(f"‚ùå Erro no tratamento de importa√ß√£o: {e}")
        return False
    
    # Testar importa√ß√£o dos m√≥dulos principais
    try:
        import moviepy
        print(f"‚úÖ MoviePy importado com sucesso - vers√£o: {moviepy.__version__}")
    except ImportError as e:
        print(f"‚ùå Falha ao importar moviepy: {e}")
        return False
    
    # Testar componentes espec√≠ficos
    components_to_test = [
        'VideoFileClip', 'ImageClip', 'AudioFileClip', 'CompositeVideoClip',
        'TextClip', 'concatenate_videoclips', 'ColorClip'
    ]
    
    for component in components_to_test:
        try:
            module = __import__('moviepy', fromlist=[component])
            if hasattr(module, component):
                print(f"‚úÖ Componente {component} dispon√≠vel")
            else:
                print(f"‚ùå Componente {component} n√£o dispon√≠vel")
        except Exception as e:
            print(f"‚ùå Erro ao verificar componente {component}: {e}")
    
    print("=" * 60)
    return True

def test_application_files():
    """Testar se os arquivos da aplica√ß√£o podem ser importados sem erros"""
    print("TESTANDO ARQUIVOS DA APLICA√á√ÉO")
    print("=" * 60)
    
    files_to_test = [
        'backend.routes.videos',
        'backend.services.video_creation_service'
    ]
    
    success_count = 0
    
    for module_name in files_to_test:
        try:
            __import__(module_name)
            print(f"‚úÖ {module_name} importado com sucesso")
            success_count += 1
        except Exception as e:
            print(f"‚ùå Erro ao importar {module_name}: {e}")
            traceback.print_exc()
    
    print("=" * 60)
    print(f"Arquivos importados com sucesso: {success_count}/{len(files_to_test)}")
    print("=" * 60)
    
    return success_count == len(files_to_test)

if __name__ == "__main__":
    print("Iniciando testes das corre√ß√µes do MoviePy...")
    
    # Testar importa√ß√µes do MoviePy
    moviepy_ok = test_moviepy_imports()
    
    # Testar arquivos da aplica√ß√£o
    app_ok = test_application_files()
    
    # Resultado final
    if moviepy_ok and app_ok:
        print("üéâ TODOS OS TESTES PASSARAM! As corre√ß√µes foram bem-sucedidas.")
        sys.exit(0)
    else:
        print("‚ùå ALGUNS TESTES FALHARAM. Verifique os erros acima.")
        sys.exit(1)

import sys
import os

print("===== Verifica√ß√£o Final da Instala√ß√£o do MoviePy =====")
print(f"Python sendo usado: {sys.executable}")
print(f"Vers√£o do Python: {sys.version}")

# Fun√ß√£o para verificar se o MoviePy est√° instalado corretamente
def verificar_moviepy():
    print("\n===== Testando a importa√ß√£o do MoviePy =====")
    
    # Tentar importar o MoviePy
    try:
        import moviepy
        print(f"‚úÖ MoviePy importado com sucesso!")
        print(f"   Vers√£o: {moviepy.__version__}")
        print(f"   Localiza√ß√£o: {moviepy.__file__}")
        
        # Tentar importar o subm√≥dulo editor
        try:
            from moviepy import editor
            print(f"‚úÖ M√≥dulo 'moviepy.editor' importado com sucesso!")
            print(f"   Localiza√ß√£o: {editor.__file__}")
            
            # Tentar importar VideoFileClip e verificar os m√©todos necess√°rios
            try:
                from moviepy.editor import VideoFileClip
                print(f"‚úÖ Classe 'VideoFileClip' importada com sucesso!")
                
                # Verificar se os m√©todos necess√°rios existem
                print(f"\n===== Verificando m√©todos necess√°rios =====")
                
                # M√©todo with_audio
                if hasattr(VideoFileClip, 'with_audio'):
                    print(f"‚úÖ M√©todo 'with_audio' est√° dispon√≠vel!")
                else:
                    print(f"‚ùå M√©todo 'with_audio' N√ÉO est√° dispon√≠vel!")
                    print("   Isso pode ser um problema para sua pipeline.")
                    
                # M√©todo set_audio
                if hasattr(VideoFileClip, 'set_audio'):
                    print(f"‚úÖ M√©todo 'set_audio' est√° dispon√≠vel!")
                else:
                    print(f"‚ùå M√©todo 'set_audio' N√ÉO est√° dispon√≠vel!")
                    print("   Isso pode ser um problema para sua pipeline.")
                
                # Listar alguns atributos importantes
                print(f"\n===== Informa√ß√µes adicionais =====")
                print(f"M√≥dulos dispon√≠veis no moviepy: {[attr for attr in dir(moviepy) if not attr.startswith('__')]}")
                print(f"M√≥dulos dispon√≠veis no moviepy.editor: {[attr for attr in dir(editor) if not attr.startswith('__') and not callable(getattr(editor, attr))]}")
                
                print("\nüéâüéâüéâ INSTALA√á√ÉO DO MOVIEPY CONCLU√çDA COM SUCESSO! üéâüéâüéâ")
                print("O MoviePy est√° funcionando corretamente e pronto para ser usado.")
                print("Voc√™ pode prosseguir com a execu√ß√£o da sua pipeline de produ√ß√£o de v√≠deo.")
                
            except ImportError as e:
                print(f"‚ùå Erro ao importar VideoFileClip: {e}")
        except ImportError as e:
            print(f"‚ùå Erro ao importar moviepy.editor: {e}")
            print("   Verifique se o diret√≥rio do MoviePy cont√©m o arquivo editor.py")
    except ImportError as e:
        print(f"‚ùå Erro ao importar MoviePy: {e}")
        print("   A instala√ß√£o n√£o foi conclu√≠da corretamente.")
        print("\nSolu√ß√µes sugeridas:")
        print("1. Certifique-se de ter executado o script batch como administrador")
        print(f"2. Tente reinstalar: {sys.executable} -m pip install moviepy==2.2.1 --force-reinstall --no-cache-dir")
        print("3. Verifique se o Python est√° usando o caminho correto")

# Verificar depend√™ncias importantes

def verificar_dependencias():
    print("\n===== Verificando depend√™ncias importantes =====")
    dependencias = ["numpy", "imageio", "imageio_ffmpeg", "pillow", "decorator", "proglog"]
    
    for dep in dependencias:
        try:
            modulo = __import__(dep)
            versao = getattr(modulo, "__version__", "Desconhecida")
            print(f"‚úÖ {dep} (vers√£o: {versao})")
        except ImportError:
            print(f"‚ùå {dep} - N√ÉO INSTALADA!")

# Verificar se o FFmpeg est√° configurado corretamente

def verificar_ffmpeg():
    print("\n===== Verificando o FFmpeg =====")
    try:
        import imageio_ffmpeg
        print(f"‚úÖ imageio_ffmpeg importado com sucesso!")
        print(f"   Vers√£o: {imageio_ffmpeg.__version__}")
        print(f"   Localiza√ß√£o do bin√°rio: {imageio_ffmpeg.get_ffmpeg_exe()}")
        
        # Testar se o FFmpeg pode ser executado
        try:
            import subprocess
            resultado = subprocess.run(
                [imageio_ffmpeg.get_ffmpeg_exe(), "-version"],
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                text=True,
                timeout=5
            )
            if resultado.returncode == 0:
                print("‚úÖ FFmpeg est√° funcionando corretamente!")
                print(f"   Vers√£o do FFmpeg: {resultado.stdout.splitlines()[0]}")
            else:
                print(f"‚ùå FFmpeg n√£o est√° funcionando: {resultado.stderr}")
        except Exception as e:
            print(f"‚ùå Erro ao executar FFmpeg: {e}")
    except ImportError as e:
        print(f"‚ùå imageio_ffmpeg n√£o est√° instalado: {e}")

# Executar todas as verifica√ß√µes
if __name__ == "__main__":
    verificar_moviepy()
    verificar_dependencias()
    verificar_ffmpeg()
    
    print("\n===== Fim da verifica√ß√£o =====")
    print("Caso tenha problemas persistentes, entre em contato com o suporte.")